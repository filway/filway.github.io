import{g as n,f as a,G as s}from"./common-bec3f312.js";const t='{"title":"图片控件开发详解","frontmatter":{"date":"2022-04-10","title":"图片控件开发详解","tags":["Flutter","图片控件","dart"],"describe":null},"headers":[{"level":2,"title":"图片控件开发详解","slug":"图片控件开发详解"},{"level":2,"title":"Image widget","slug":"image-widget"},{"level":3,"title":"Image支持如下几种类型的构造函数：","slug":"image支持如下几种类型的构造函数："},{"level":3,"title":"Image支持的图片格式","slug":"image支持的图片格式"},{"level":2,"title":"如何加载网络图片？","slug":"如何加载网络图片？"},{"level":2,"title":"如何加载静态图片，以及处理不同分辨率的图片？","slug":"如何加载静态图片，以及处理不同分辨率的图片？"},{"level":2,"title":"如何加载本地图片？","slug":"如何加载本地图片？"},{"level":3,"title":"加载完整路径的本地图片","slug":"加载完整路径的本地图片"},{"level":3,"title":"加载相对路径的本地图片","slug":"加载相对路径的本地图片"},{"level":2,"title":"如何设置placeholder?","slug":"如何设置placeholder"},{"level":3,"title":"从内存中加载placeholder","slug":"从内存中加载placeholder"},{"level":3,"title":"从本地资源中加载placeholder","slug":"从本地资源中加载placeholder"},{"level":2,"title":"如何配置图片缓存？","slug":"如何配置图片缓存？"},{"level":2,"title":"如何加载Icon？","slug":"如何加载icon？"},{"level":2,"title":"使用Icons","slug":"使用icons"},{"level":2,"title":"使用自定义的Icon","slug":"使用自定义的icon"}],"relativePath":"docs/notes/Flutter/image_widget.md","lastUpdated":1660147426756.5005}';var p={};const e=s('<h2 id="图片控件开发详解"><a class="header-anchor" href="#图片控件开发详解" aria-hidden="true">#</a> 图片控件开发详解</h2><ul><li>Image widget</li><li>如何加载网络图片？</li><li>如何加载静态图片？</li><li>如何加载本地图片？</li><li>如何设置Placeholder?</li><li>如何配置图片缓存？</li><li>如何加载Icon？</li></ul><h2 id="image-widget"><a class="header-anchor" href="#image-widget" aria-hidden="true">#</a> Image widget</h2><p>Flutter中一个用来展示图片的widget。</p><h3 id="image支持如下几种类型的构造函数："><a class="header-anchor" href="#image支持如下几种类型的构造函数：" aria-hidden="true">#</a> Image支持如下几种类型的构造函数：</h3><ul><li><a href="https://docs.flutter.io/flutter/widgets/Image/Image.html" target="_blank" rel="noopener noreferrer">new Image</a> - 用于从ImageProvider获取图像；</li><li><a href="https://docs.flutter.io/flutter/widgets/Image/Image.asset.html" target="_blank" rel="noopener noreferrer">new Image.asset</a> - 使用key 从AssetBundle获得的图像；</li><li><a href="https://docs.flutter.io/flutter/widgets/Image/Image.network.html" target="_blank" rel="noopener noreferrer">new Image.network</a> - 从网络URL中获取图片；</li><li><a href="https://docs.flutter.io/flutter/widgets/Image/Image.file.html" target="_blank" rel="noopener noreferrer">new Image.file</a> - 从本地文件中获取图片；</li><li><a href="https://docs.flutter.io/flutter/widgets/Image/Image.memory.html" target="_blank" rel="noopener noreferrer">new Image.memory</a> - 用于从Uint8List获取图像；</li></ul><blockquote><p>在加载项目中的图片资源时，为了让Image能够根据像素密度自动适配不同分辨率的图片，请使用<code>AssetImage</code>指定图像，并确保在widget树中的“Image” widget上方存在<code>MaterialApp</code>，<code>WidgetsApp</code>或<code>MediaQuery</code>窗口widget。</p></blockquote><h3 id="image支持的图片格式"><a class="header-anchor" href="#image支持的图片格式" aria-hidden="true">#</a> Image支持的图片格式</h3><p>Image 支持以下类型的图片：JPEG, PNG, GIF, Animated GIF, WebP, Animated WebP, BMP, 和 WBMP。</p><h2 id="如何加载网络图片？"><a class="header-anchor" href="#如何加载网络图片？" aria-hidden="true">#</a> 如何加载网络图片？</h2><p>要加载网络图片，我们需要使用<code>Image.network</code>构造方法：</p><div class="language-dart"><pre><code>Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>\n  <span class="token string">&#39;http://www.devio.org/img/avatar.png&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre></div><blockquote><p>demo:</p></blockquote><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> <span class="token string">&#39;Flutter bottomNavigationBar&#39;</span><span class="token punctuation">,</span>\n      theme<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">ThemeData<span class="token punctuation">.</span>fallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      home<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;http://www.devio.org/img/avatar.png&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="如何加载静态图片，以及处理不同分辨率的图片？"><a class="header-anchor" href="#如何加载静态图片，以及处理不同分辨率的图片？" aria-hidden="true">#</a> 如何加载静态图片，以及处理不同分辨率的图片？</h2><p>要加载项目中的静态图片，需要一些两步：</p><ul><li>在 pubspec.yaml 文件中声明图片资源的路径；</li><li>使用<code>AssetImage</code>访问图片；</li></ul><p>pubspec.yaml声明图片路径：</p><div class="language-yaml"><pre><code><span class="token key atrule">assets</span><span class="token punctuation">:</span>\n <span class="token punctuation">-</span> images/my_icon.png\n</code></pre></div><p>使用<code>AssetImage</code>访问图片图片：</p><div class="language-dart"><pre><code><span class="token function">Image</span><span class="token punctuation">(</span>\n  height<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n  width<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n  image<span class="token punctuation">:</span> <span class="token function">AssetImage</span><span class="token punctuation">(</span>my_icon<span class="token punctuation">.</span>png<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span>\n</code></pre></div><p>除了我们使用Image的构造方法手动指定AssetImage之外，还可通过<code>Image.asset</code>来加载静态图片：</p><div class="language-dart"><pre><code>Image<span class="token punctuation">.</span><span class="token function">asset</span><span class="token punctuation">(</span>my_icon<span class="token punctuation">.</span>png<span class="token punctuation">,</span>\n\twidth<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n\theight<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>两者是等效的。</p><p>/sdcard/Download/Stack.png</p><h2 id="如何加载本地图片？"><a class="header-anchor" href="#如何加载本地图片？" aria-hidden="true">#</a> 如何加载本地图片？</h2><h3 id="加载完整路径的本地图片"><a class="header-anchor" href="#加载完整路径的本地图片" aria-hidden="true">#</a> 加载完整路径的本地图片</h3><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;dart:io&#39;</span><span class="token punctuation">;</span>\nImage<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token function">File</span><span class="token punctuation">(</span><span class="token string">&#39;/sdcard/Download/Stack.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</code></pre></div><h3 id="加载相对路径的本地图片"><a class="header-anchor" href="#加载相对路径的本地图片" aria-hidden="true">#</a> 加载相对路径的本地图片</h3><blockquote><p>第一步：</p></blockquote><p>在pubspec.yaml中添加<a href="https://pub.dartlang.org/packages/path_provider" target="_blank" rel="noopener noreferrer">path_provider</a>插件；</p><blockquote><p>第二步：导入头文件</p></blockquote><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;dart:io&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:path_provider/path_provider.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">//Image.file(File(&#39;/sdcard/Download/Stack.png&#39;)),</span>\n<span class="token function">FutureBuilder</span><span class="token punctuation">(</span>future<span class="token punctuation">:</span> <span class="token function">_getLocalFile</span><span class="token punctuation">(</span><span class="token string">&quot;Download/Stack.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  builder<span class="token punctuation">:</span>  <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> AsyncSnapshot<span class="token operator">&lt;</span>File<span class="token operator">&gt;</span> snapshot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> snapshot<span class="token punctuation">.</span>data <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> Image<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n<span class="token comment">//获取SDCard的路径：</span>\n Future<span class="token operator">&lt;</span>File<span class="token operator">&gt;</span> <span class="token function">_getLocalFile</span><span class="token punctuation">(</span>String filename<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    String dir <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getExternalStorageDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>path<span class="token punctuation">;</span>\n    File f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&#39;$dir/$filename&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> f<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><h2 id="如何设置placeholder"><a class="header-anchor" href="#如何设置placeholder" aria-hidden="true">#</a> 如何设置placeholder?</h2><p>为了设置Placeholder我们需要借助<a href="https://docs.flutter.io/flutter/widgets/FadeInImage-class.html" target="_blank" rel="noopener noreferrer">FadeInImage</a>，它能够从内存，本地资源中加载placeholder。</p><h3 id="从内存中加载placeholder"><a class="header-anchor" href="#从内存中加载placeholder" aria-hidden="true">#</a> 从内存中加载placeholder</h3><blockquote><p>第一步：</p></blockquote><p>安装<a href="https://pub.dartlang.org/packages/transparent_image" target="_blank" rel="noopener noreferrer">transparent_image</a>插件。</p><blockquote><p>第二步：</p></blockquote><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:transparent_image/transparent_image.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> title <span class="token operator">=</span> <span class="token string">&#39;Fade in images&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> title<span class="token punctuation">,</span>\n      home<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n          title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token function">Stack</span><span class="token punctuation">(</span>\n          children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">&gt;</span><span class="token punctuation">[</span>\n            <span class="token function">Center</span><span class="token punctuation">(</span>child<span class="token punctuation">:</span> <span class="token function">CircularProgressIndicator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">Center</span><span class="token punctuation">(</span>\n              child<span class="token punctuation">:</span> FadeInImage<span class="token punctuation">.</span><span class="token function">memoryNetwork</span><span class="token punctuation">(</span>\n                placeholder<span class="token punctuation">:</span> kTransparentImage<span class="token punctuation">,</span>\n                image<span class="token punctuation">:</span> <span class="token string">&#39;http://www.devio.org/img/avatar.png&#39;</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="从本地资源中加载placeholder"><a class="header-anchor" href="#从本地资源中加载placeholder" aria-hidden="true">#</a> 从本地资源中加载placeholder</h3><blockquote><p>第一步</p></blockquote><p>配置本地资源图片：</p><div class="language-yaml"><pre><code> <span class="token key atrule">flutter</span><span class="token punctuation">:</span>\n   <span class="token key atrule">assets</span><span class="token punctuation">:</span>\n    \t<span class="token punctuation">-</span> assets/loading.gif\n</code></pre></div><blockquote><p>第二步</p></blockquote><p>加载本地资源图片作为placeholder：</p><div class="language-dart"><pre><code>FadeInImage<span class="token punctuation">.</span><span class="token function">assetNetwork</span><span class="token punctuation">(</span>\n  placeholder<span class="token punctuation">:</span> <span class="token string">&#39;assets/loading.gif&#39;</span><span class="token punctuation">,</span>\n  image<span class="token punctuation">:</span> <span class="token string">&#39;http://www.devio.org/img/avatar.png&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="如何配置图片缓存？"><a class="header-anchor" href="#如何配置图片缓存？" aria-hidden="true">#</a> 如何配置图片缓存？</h2><p>在Flutter中我们可以借助<a href="https://pub.dartlang.org/packages/cached_network_image" target="_blank" rel="noopener noreferrer">cached_network_image</a>插件，来从网络上加载图片，并且将其缓存到本地，以供下次使用。</p><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:cached_network_image/cached_network_image.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> title <span class="token operator">=</span> <span class="token string">&#39;Cached Images&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> title<span class="token punctuation">,</span>\n      home<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n          title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>\n          child<span class="token punctuation">:</span> <span class="token function">CachedNetworkImage</span><span class="token punctuation">(</span>\n            placeholder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> url<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">new</span> <span class="token class-name">CircularProgressIndicator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            imageUrl<span class="token punctuation">:</span>\n                <span class="token string">&#39;https://picsum.photos/250?image=9&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>关于创建<code>图片控件开发详解</code>的更多实战技巧与最佳实践可学习<a href="https://coding.imooc.com/class/321.html" target="_blank" rel="noopener noreferrer">《基于Flutter1.x开发携程网App》</a>。</p></blockquote><h2 id="如何加载icon？"><a class="header-anchor" href="#如何加载icon？" aria-hidden="true">#</a> 如何加载Icon？</h2><p>在Flutter中我们可以借助<a href="https://docs.flutter.io/flutter/widgets/Icon-class.html" target="_blank" rel="noopener noreferrer">Icon</a>来加载icon：</p><div class="language-dart"><pre><code><span class="token keyword">const</span> <span class="token function">Icon</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>icon<span class="token comment">//IconDate, {</span>\n   Key key<span class="token punctuation">,</span>\n   <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">,</span><span class="token comment">//大小</span>\n   <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span><span class="token comment">//颜色</span>\n   <span class="token keyword">this</span><span class="token punctuation">.</span>semanticLabel<span class="token punctuation">,</span><span class="token comment">//标志位</span>\n   <span class="token keyword">this</span><span class="token punctuation">.</span>textDirection<span class="token punctuation">,</span><span class="token comment">//绘制方向，一般使用不到</span>\n <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>从Icon的构造方法可以很清楚的看出Icon构造方法需要一个默认的类型为IconData类型的参数，我们可以构造一个自己的IconData，也可以使用Flutter提供的<a href="https://design.google.com/icons/" target="_blank" rel="noopener noreferrer">material_fonts</a>。</p><h2 id="使用icons"><a class="header-anchor" href="#使用icons" aria-hidden="true">#</a> 使用Icons</h2><p>通过如下代码我们可以使用Flutter内置的<a href="https://design.google.com/icons/" target="_blank" rel="noopener noreferrer">material_fonts</a>：</p><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>home<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// TODO: implement build</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>\n      appBar<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">&quot;Icons&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Icon</span><span class="token punctuation">(</span>Icons<span class="token punctuation">.</span>android<span class="token punctuation">,</span>size<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="使用自定义的icon"><a class="header-anchor" href="#使用自定义的icon" aria-hidden="true">#</a> 使用自定义的Icon</h2><p>使用自定义的我们需要构造一个：</p><div class="language-dart"><pre><code><span class="token keyword">const</span> <span class="token function">IconData</span><span class="token punctuation">(</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>codePoint<span class="token punctuation">,</span><span class="token comment">//必填参数，fonticon对应的16进制Unicode {</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span><span class="token comment">//字体库系列</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>fontPackage<span class="token punctuation">,</span><span class="token comment">//字体在那个包中，不填仅在自己程序包中查找</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>matchTextDirection<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//图标是否按照图标绘制方向显示</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>首先我我们需要向使用字体一样，在pubspec.yaml中配置我们的icon：</p><div class="language-yaml"><pre><code><span class="token key atrule">fonts</span><span class="token punctuation">:</span>\n\t<span class="token punctuation">-</span> <span class="token key atrule">family</span><span class="token punctuation">:</span> devio\n\t  <span class="token key atrule">fonts</span><span class="token punctuation">:</span>\n\t    <span class="token punctuation">-</span> <span class="token key atrule">asset</span><span class="token punctuation">:</span> fonts/devio.ttf\n</code></pre></div><p>接下来就可以使用了：</p><div class="language-dar"><pre><code>child: new Icon(new IconData(0xf5566,fontFamily: &quot;devio&quot;),size: 100.0,color: Colors.blueAccent,)\n</code></pre></div>',65);p.render=function(s,t,p,o,c,l){return a(),n("div",null,[e])};export default p;export{t as __pageData};
