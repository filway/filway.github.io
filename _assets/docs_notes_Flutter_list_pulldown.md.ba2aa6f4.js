import{g as n,f as s,G as a}from"./common-bec3f312.js";const t='{"title":"高级功能列表下拉刷新与上拉加载更多功能实现","frontmatter":{"date":"2022-04-15","title":"高级功能列表下拉刷新与上拉加载更多功能实现","tags":["Flutter"],"describe":null},"headers":[{"level":2,"title":"高级功能列表下拉刷新与上拉加载更多功能实现","slug":"高级功能列表下拉刷新与上拉加载更多功能实现"},{"level":2,"title":"如何实现列表下拉刷新？","slug":"如何实现列表下拉刷新？"},{"level":2,"title":"如何实现上拉加载更多？","slug":"如何实现上拉加载更多？"}],"relativePath":"docs/notes/Flutter/list_pulldown.md","lastUpdated":1660147426756.5005}';var p={};const o=a('<h2 id="高级功能列表下拉刷新与上拉加载更多功能实现"><a class="header-anchor" href="#高级功能列表下拉刷新与上拉加载更多功能实现" aria-hidden="true">#</a> 高级功能列表下拉刷新与上拉加载更多功能实现</h2><ul><li>如何实现列表下拉刷新？</li><li>如何实现上拉加载更多？</li></ul><h2 id="如何实现列表下拉刷新？"><a class="header-anchor" href="#如何实现列表下拉刷新？" aria-hidden="true">#</a> 如何实现列表下拉刷新？</h2><p>在Flutter中有一个<code>RefreshIndicator</code>，它是一个下拉刷新的widget，通过它我们可以实现列表的下拉刷新。</p><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nList<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> cityNames <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&#39;北京&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;上海&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;广州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;杭州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;苏州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成都&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;武汉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;郑州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;洛阳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;厦门&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;青岛&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;拉萨&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  _MyAppState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_MyAppState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">_MyAppState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyApp<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> title <span class="token operator">=</span> <span class="token string">&#39;高级功能列表下拉刷新与上拉加载更多功能实现&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> title<span class="token punctuation">,</span>\n      home<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n          title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token function">RefreshIndicator</span><span class="token punctuation">(</span>\n          onRefresh<span class="token punctuation">:</span> _handleRefresh<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>\n            children<span class="token punctuation">:</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Future<span class="token operator">&lt;</span>Null<span class="token operator">&gt;</span> <span class="token function">_handleRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> Future<span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span><span class="token function">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      cityNames <span class="token operator">=</span> cityNames<span class="token punctuation">.</span>reversed<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  List<span class="token operator">&lt;</span>Widget<span class="token operator">&gt;</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> cityNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_item</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Widget <span class="token function">_item</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n      height<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n      margin<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>bottom<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      alignment<span class="token punctuation">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n      decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>\n        city<span class="token punctuation">,</span>\n        style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="如何实现上拉加载更多？"><a class="header-anchor" href="#如何实现上拉加载更多？" aria-hidden="true">#</a> 如何实现上拉加载更多？</h2><p>为了给列表添加上了加载更多的功能，我们可以借助<code>ScrollController</code>，列表支持设置<code>controller</code>参数，通过<code>ScrollController</code>监听列表滚动的位置，来实现加载更多的功能。</p><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nList<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> cityNames <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&#39;北京&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;上海&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;广州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;杭州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;苏州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成都&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;武汉&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;郑州&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;洛阳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;厦门&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;青岛&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;拉萨&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  _MyAppState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_MyAppState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">_MyAppState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>MyApp<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  ScrollController _scrollController <span class="token operator">=</span> <span class="token function">ScrollController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _scrollController<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>_scrollController<span class="token punctuation">.</span>position<span class="token punctuation">.</span>pixels <span class="token operator">==</span>\n          _scrollController<span class="token punctuation">.</span>position<span class="token punctuation">.</span>maxScrollExtent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">_loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _scrollController<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> title <span class="token operator">=</span> <span class="token string">&#39;高级功能列表下拉刷新与上拉加载更多功能实现&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token function">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> title<span class="token punctuation">,</span>\n      home<span class="token punctuation">:</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n        appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n          title<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        body<span class="token punctuation">:</span> <span class="token function">RefreshIndicator</span><span class="token punctuation">(</span>\n          onRefresh<span class="token punctuation">:</span> _handleRefresh<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">ListView</span><span class="token punctuation">(</span>\n            controller<span class="token punctuation">:</span> _scrollController<span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">_loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> Future<span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span><span class="token function">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> list <span class="token operator">=</span> List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>cityNames<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cityNames<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      cityNames <span class="token operator">=</span> list<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Future<span class="token operator">&lt;</span>Null<span class="token operator">&gt;</span> <span class="token function">_handleRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> Future<span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span><span class="token function">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      cityNames <span class="token operator">=</span> cityNames<span class="token punctuation">.</span>reversed<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  List<span class="token operator">&lt;</span>Widget<span class="token operator">&gt;</span> <span class="token function">_buildList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> cityNames<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_item</span><span class="token punctuation">(</span>city<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Widget <span class="token function">_item</span><span class="token punctuation">(</span>String city<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n      height<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>\n      margin<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>bottom<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      alignment<span class="token punctuation">:</span> Alignment<span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n      decoration<span class="token punctuation">:</span> <span class="token function">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>teal<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span>\n        city<span class="token punctuation">,</span>\n        style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>white<span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',8);p.render=function(a,t,p,c,e,u){return s(),n("div",null,[o])};export default p;export{t as __pageData};
