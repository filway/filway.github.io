import{g as n,f as a,G as s}from"./common-bec3f312.js";const t='{"title":"动画Animation开发指南","frontmatter":{"date":"2022-04-11","title":"动画Animation开发指南","tags":["Flutter","动画","dart"],"describe":null},"headers":[{"level":2,"title":"动画Animation开发指南","slug":"动画animation开发指南"},{"level":2,"title":"在Flutter中有哪些类型的动画？","slug":"在flutter中有哪些类型的动画？"},{"level":2,"title":"如何使用动画库中的基础类给widget添加动画？","slug":"如何使用动画库中的基础类给widget添加动画？"},{"level":3,"title":"Animation","slug":"animation"},{"level":3,"title":"CurvedAnimation","slug":"curvedanimation"},{"level":3,"title":"AnimationController","slug":"animationcontroller"},{"level":3,"title":"Tween","slug":"tween"},{"level":3,"title":"为widget添加动画","slug":"为widget添加动画"},{"level":2,"title":"如何为动画添加监听器？","slug":"如何为动画添加监听器？"},{"level":2,"title":"用AnimatedWidget与AnimatedBuilder简化和重构我们对动画的使用","slug":"用animatedwidget与animatedbuilder简化和重构我们对动画的使用"},{"level":3,"title":"什么是AnimatedWidget？","slug":"什么是animatedwidget？"},{"level":3,"title":"什么是AnimatedBuilder？","slug":"什么是animatedbuilder？"},{"level":2,"title":"如何使用Hero动画？","slug":"如何使用hero动画？"},{"level":3,"title":"什么是Hero动画？","slug":"什么是hero动画？"}],"relativePath":"docs/notes/Flutter/animation.md","lastUpdated":1660147426756.5005}';var p={};const o=s('<h2 id="动画animation开发指南"><a class="header-anchor" href="#动画animation开发指南" aria-hidden="true">#</a> 动画Animation开发指南</h2><ul><li>在Flutter中有哪些类型的动画？</li><li>如何使用动画库中的基础类给widget添加动画？</li><li>如何为动画添加监听器？</li><li>该什么时候使用AnimatedWidget与AnimatedBuilder?</li><li>如何使用Hero动画？</li></ul><p>精心设计的动画会让用户界面感觉更直观、流畅，能改善用户体验。 Flutter的动画支持可以轻松实现各种动画类型。许多widget，特别是Material Design widgets， 都带有在其设计规范中定义的标准动画效果，但也可以自定义这些效果。</p><h2 id="在flutter中有哪些类型的动画？"><a class="header-anchor" href="#在flutter中有哪些类型的动画？" aria-hidden="true">#</a> 在Flutter中有哪些类型的动画？</h2><p>在Flutter中动画分为两类：基于tween或基于物理的。</p><blockquote><p>推荐大家查阅我们上面课程中所讲到的Flutter gallery中的示例代码来学习动画。</p></blockquote><ul><li>补间(Tween)动画：在补间动画中，定义了开始点和结束点、时间线以及定义转换时间和速度的曲线。然后由框架计算如何从开始点过渡到结束点。</li><li>基于物理的动画：在基于物理的动画中，运动被模拟为与真实世界的行为相似。例如，当你掷球时，它在何处落地，取决于抛球速度有多快、球有多重、距离地面有多远。 类似地，将连接在弹簧上的球落下（并弹起）与连接到绳子上的球放下的方式也是不同。</li></ul><h2 id="如何使用动画库中的基础类给widget添加动画？"><a class="header-anchor" href="#如何使用动画库中的基础类给widget添加动画？" aria-hidden="true">#</a> 如何使用动画库中的基础类给widget添加动画？</h2><p>在为widget添加动画之前，先让我们认识下动画的几个朋友：</p><ul><li><a href="https://docs.flutter.io/flutter/animation/Animation-class.html" target="_blank" rel="noopener noreferrer">Animation</a>：是Flutter动画库中的一个核心类，它生成指导动画的值；</li><li><a href="https://docs.flutter.io/flutter/animation/CurvedAnimation-class.html" target="_blank" rel="noopener noreferrer">CurvedAnimation</a>：Animation的一个子类，将过程抽象为一个非线性曲线；</li><li><a href="https://docs.flutter.io/flutter/animation/AnimationController-class.html" target="_blank" rel="noopener noreferrer">AnimationController</a>：Animation的一个子类，用来管理Animation；</li><li><a href="https://docs.flutter.io/flutter/animation/Tween-class.html" target="_blank" rel="noopener noreferrer">Tween</a>：在正在执行动画的对象所使用的数据范围之间生成值。例如，Tween可生成从红到蓝之间的色值，或者从0到255；</li></ul><h3 id="animation"><a class="header-anchor" href="#animation" aria-hidden="true">#</a> Animation</h3><p>在Flutter中，Animation对象本身和UI渲染没有任何关系。Animation是一个抽象类，它拥有其当前值和状态（完成或停止）。其中一个比较常用的Animation类是<code>Animation&lt;double&gt;</code>。</p><p><strong>Flutter中的Animation对象是一个在一段时间内依次生成一个区间之间值的类</strong>。Animation对象的输出可以是线性的、曲线的、一个步进函数或者任何其他可以设计的映射。 根据Animation对象的控制方式，动画可以反向运行，甚至可以在中间切换方向。</p><ul><li>Animation还可以生成除double之外的其他类型值，如：<code>Animation&lt;Color&gt;</code> 或 <code>Animation&lt;Size&gt;</code>；</li><li>Animation对象有状态。可以通过访问其value属性获取动画的当前值；</li><li>Animation对象本身和UI渲染没有任何关系；</li></ul><h3 id="curvedanimation"><a class="header-anchor" href="#curvedanimation" aria-hidden="true">#</a> CurvedAnimation</h3><p>CurvedAnimation将动画过程定义为一个非线性曲线。</p><div class="language-dart"><pre><code><span class="token keyword">final</span> CurvedAnimation curve <span class="token operator">=</span>\n    <span class="token keyword">new</span> <span class="token class-name">CurvedAnimation</span><span class="token punctuation">(</span>parent<span class="token punctuation">:</span> controller<span class="token punctuation">,</span> curve<span class="token punctuation">:</span> Curves<span class="token punctuation">.</span>easeIn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><blockquote><p>注: <a href="https://docs.flutter.io/flutter/animation/Curves-class.html" target="_blank" rel="noopener noreferrer">Curves</a> 类定义了许多常用的曲线，也可以创建自己的，例如：</p></blockquote><div class="language-dart"><pre><code><span class="token keyword">class</span> <span class="token class-name">ShakeCurve</span> <span class="token keyword">extends</span> <span class="token class-name">Curve</span> <span class="token punctuation">{</span>\n  <span class="token metadata symbol">@override</span>\n  double <span class="token function">transform</span><span class="token punctuation">(</span>double t<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>t <span class="token operator">*</span> math<span class="token punctuation">.</span>PI <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="animationcontroller"><a class="header-anchor" href="#animationcontroller" aria-hidden="true">#</a> AnimationController</h3><p><code>AnimationController</code>是一个特殊的<code>Animation</code>对象，在屏幕刷新的每一帧，就会生成一个新的值。默认情况下，<code>AnimationController</code>在给定的时间段内会线性的生成从0.0到1.0的数字。 例如，下面代码创建一个Animation对象：</p><div class="language-dart"><pre><code><span class="token keyword">final</span> AnimationController controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>\n    duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>AnimationController派生自<code>Animation&lt;double&gt;</code>，因此可以在需要Animation对象的任何地方使用。 但是，<code>AnimationController</code>具有控制动画的其他方法：</p><ul><li><code>forward()</code>：启动动画；</li><li><code>reverse({double from})</code>：倒放动画；</li><li><code>reset()</code>：重置动画，将其设置到动画的开始位置；</li><li><code>stop({ bool canceled = true })</code>：停止动画；</li></ul><p>当创建一个AnimationController时，需要传递一个vsync参数，存在vsync时会防止屏幕外动画消耗不必要的资源，可以将stateful对象作为vsync的值。</p><blockquote><p>注意： 在某些情况下，值(position，值动画的当前值)可能会超出AnimationController的0.0-1.0的范围。例如，fling()函数允许您提供速度(velocity)、力量(force)、position(通过Force对象)。位置(position)可以是任何东西，因此可以在0.0到1.0范围之外。 CurvedAnimation生成的值也可以超出0.0到1.0的范围。根据选择的曲线，CurvedAnimation的输出可以具有比输入更大的范围。例如，Curves.elasticIn等弹性曲线会生成大于或小于默认范围的值。</p></blockquote><h3 id="tween"><a class="header-anchor" href="#tween" aria-hidden="true">#</a> Tween</h3><p>默认情况下，AnimationController对象的范围从0.0到1.0。如果您需要不同的范围或不同的数据类型，则可以使用Tween来配置动画以生成不同的范围或数据类型的值。例如，以下示例，Tween生成从-200.0到0.0的值：</p><div class="language-dart"><pre><code><span class="token keyword">final</span> Tween doubleTween <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tween</span><span class="token operator">&lt;</span>double<span class="token operator">&gt;</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">200.0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Tween是一个无状态(stateless)对象，需要begin和end值。Tween的唯一职责就是定义从输入范围到输出范围的映射。输入范围通常为0.0到1.0，但这不是必须的。</p><p>Tween继承自<code>Animatable&lt;T&gt;</code>，而不是继承自<code>Animation&lt;T&gt;</code>。Animatable与Animation相似，不是必须输出double值。例如，ColorTween指定两种颜色之间的过渡。</p><div class="language-dart"><pre><code><span class="token keyword">final</span> Tween colorTween <span class="token operator">=</span>\n    <span class="token keyword">new</span> <span class="token class-name">ColorTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>transparent<span class="token punctuation">,</span> end<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>black54<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Tween对象不存储任何状态。相反，它提供了<code>evaluate(Animation&lt;double&gt; animation)</code>方法将映射函数应用于动画当前值。 Animation对象的当前值可以通过<code>value()</code>方法取到。evaluate函数还执行一些其它处理，例如分别确保在动画值为0.0和1.0时返回开始和结束状态。</p><h4 id="tween-animate"><a class="header-anchor" href="#tween-animate" aria-hidden="true">#</a> Tween.animate</h4><p>要使用Tween对象，可调用它的<code>animate()</code>方法，传入一个控制器对象。例如，以下代码在500毫秒内生成从0到255的整数值。</p><div class="language-dart"><pre><code><span class="token keyword">final</span> AnimationController controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>\n    duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nAnimation<span class="token operator">&lt;</span>int<span class="token operator">&gt;</span> alpha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>注意<code>animate()</code>返回的是一个Animation，而不是一个Animatable。</p><p>以下示例构建了一个控制器、一条曲线和一个Tween：</p><div class="language-dart"><pre><code><span class="token keyword">final</span> AnimationController controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>\n    duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">final</span> Animation curve <span class="token operator">=</span>\n    <span class="token keyword">new</span> <span class="token class-name">CurvedAnimation</span><span class="token punctuation">(</span>parent<span class="token punctuation">:</span> controller<span class="token punctuation">,</span> curve<span class="token punctuation">:</span> Curves<span class="token punctuation">.</span>easeOut<span class="token punctuation">)</span><span class="token punctuation">;</span>\nAnimation<span class="token operator">&lt;</span>int<span class="token operator">&gt;</span> alpha <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>curve<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="为widget添加动画"><a class="header-anchor" href="#为widget添加动画" aria-hidden="true">#</a> 为widget添加动画</h3><p>在下面的实例中我们为一个logo添加了一个从小放大的动画： <img src="https://oss.filway.cn/filway-blog/zoom.gif" alt="zoom.gif"></p><div class="language-dart"><pre><code>   <span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">LogoApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">LogoApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  _LogoAppState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_LogoAppState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">_LogoAppState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>LogoApp<span class="token operator">&gt;</span> <span class="token keyword">with</span> SingleTickerProviderStateMixin <span class="token punctuation">{</span>\n  Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">;</span>\n  AnimationController controller<span class="token punctuation">;</span>\n  AnimationStatus animationState<span class="token punctuation">;</span>\n  double animationValue<span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller <span class="token operator">=</span>\n        <span class="token function">AnimationController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// #docregion addListener</span>\n    animation <span class="token operator">=</span> Tween<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// #enddocregion addListener</span>\n        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          animationValue <span class="token operator">=</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// #docregion addListener</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addStatusListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>AnimationStatus state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          animationState <span class="token operator">=</span> state<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// #enddocregion addListener</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n      margin<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">only</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>\n        children<span class="token punctuation">:</span> <span class="token operator">&lt;</span>Widget<span class="token operator">&gt;</span><span class="token punctuation">[</span>\n          <span class="token function">GestureDetector</span><span class="token punctuation">(</span>\n            onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              controller<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;Start&#39;</span><span class="token punctuation">,</span> textDirection<span class="token punctuation">:</span> TextDirection<span class="token punctuation">.</span>ltr<span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;State:&#39;</span> <span class="token operator">+</span> animationState<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              textDirection<span class="token punctuation">:</span> TextDirection<span class="token punctuation">.</span>ltr<span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;Value:&#39;</span> <span class="token operator">+</span> animationValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              textDirection<span class="token punctuation">:</span> TextDirection<span class="token punctuation">.</span>ltr<span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token function">Container</span><span class="token punctuation">(</span>\n            height<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n            width<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> <span class="token function">FlutterLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>注意，在上述代码中要实现这个动画的关键一步是在<code>addListener()</code>的回调中添加<code>setState</code>的调用这样才能触发页面重新渲染，动画才能有效，另外也可以通过<a href="https://coding.imooc.com/lesson/321.html#AnimatedWidget" target="_blank" rel="noopener noreferrer">AnimatedWidget</a>来实现，在下文中会讲到。</p></blockquote><h2 id="如何为动画添加监听器？"><a class="header-anchor" href="#如何为动画添加监听器？" aria-hidden="true">#</a> 如何为动画添加监听器？</h2><p>有时我们需要知道动画执行的进度和状态，在Flutter中我们可以通过Animation的<code>addListener</code>与<code>addStatusListener</code>方法为动画添加监听器：</p><ul><li><code>addListener</code>：动画的值发生变化时被调用；</li><li><code>addStatusListener</code>：动画状态发生变化时被调用；</li></ul><div class="language-dart"><pre><code> <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller <span class="token operator">=</span>\n        <span class="token function">AnimationController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    animation <span class="token operator">=</span> Tween<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span>\n      <span class="token comment">// #enddocregion print-state</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addStatusListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> AnimationStatus<span class="token punctuation">.</span>completed<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          controller<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> AnimationStatus<span class="token punctuation">.</span>dismissed<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token comment">// #docregion print-state</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addStatusListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;$state&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// #enddocregion addListener</span>\n        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// The state that has changed here is the animation object’s value.</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// #docregion addListener</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>可对照学习<a href="https://coding.imooc.com/lesson/321.html#%E4%B8%BAwidget%E6%B7%BB%E5%8A%A0%E5%8A%A8%E7%94%BB" target="_blank" rel="noopener noreferrer">为widget添加动画</a>的例子；</p></blockquote><h2 id="用animatedwidget与animatedbuilder简化和重构我们对动画的使用"><a class="header-anchor" href="#用animatedwidget与animatedbuilder简化和重构我们对动画的使用" aria-hidden="true">#</a> 用AnimatedWidget与AnimatedBuilder简化和重构我们对动画的使用</h2><h3 id="什么是animatedwidget？"><a class="header-anchor" href="#什么是animatedwidget？" aria-hidden="true">#</a> 什么是AnimatedWidget？</h3><p>我们可以将<code>AnimatedWidget</code>理解为Animation的助手，使用它可以简化我们对动画的使用，在<a href="https://coding.imooc.com/lesson/321.html#%E4%B8%BAwidget%E6%B7%BB%E5%8A%A0%E5%8A%A8%E7%94%BB" target="_blank" rel="noopener noreferrer">为widget添加动画</a>的学习中我们不难发现，在不使用<code>AnimatedWidget</code>的情况下需要手动调用动画的<code>addListener()</code>并在回调中添加<code>setState</code>才能看到动画效果，<code>AnimatedWidget</code>将为我们简化这一操作。</p><p>在下面的重构示例中，LogoApp现在继承自<code>AnimatedWidget</code>而不是<code>StatefulWidget</code>。<code>AnimatedWidget</code>在绘制时使用动画的当前值。LogoApp仍然管理着<code>AnimationController</code>和<code>Tween</code>。</p><div class="language-dart"><pre><code><span class="token comment">// Demonstrate a simple animation with AnimatedWidget</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/animation.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">AnimatedLogo</span> <span class="token keyword">extends</span> <span class="token class-name">AnimatedWidget</span> <span class="token punctuation">{</span>\n  <span class="token function">AnimatedLogo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>Key key<span class="token punctuation">,</span> Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">,</span> listenable<span class="token punctuation">:</span> animation<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation <span class="token operator">=</span> listenable<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Center</span><span class="token punctuation">(</span>\n      child<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n        margin<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">EdgeInsets<span class="token punctuation">.</span>symmetric</span><span class="token punctuation">(</span>vertical<span class="token punctuation">:</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        height<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n        width<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">FlutterLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">LogoApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  _LogoAppState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">new</span> <span class="token class-name">_LogoAppState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">_LogoAppState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>LogoApp<span class="token operator">&gt;</span> <span class="token keyword">with</span> SingleTickerProviderStateMixin <span class="token punctuation">{</span>\n  AnimationController controller<span class="token punctuation">;</span>\n  Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">;</span>\n\n  <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnimationController</span><span class="token punctuation">(</span>\n        duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">300.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AnimatedLogo</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LogoApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="什么是animatedbuilder？"><a class="header-anchor" href="#什么是animatedbuilder？" aria-hidden="true">#</a> 什么是AnimatedBuilder？</h3><p><code>AnimatedBuilder</code>是用于构建动画的通用widget，AnimatedBuilder对于希望将动画作为更大构建函数的一部分包含在内的更复杂的widget时非常有用，其实你可以这样理解：AnimatedBuilder是拆分动画的一个工具类，借助它我们可以将动画和widget进行分离：</p><p>在上面的实例中我们的代码存在的一个问题： 更改动画需要更改显示logo的widget。更好的解决方案是将职责分离：</p><ul><li>显示logo</li><li>定义Animation对象</li><li>渲染过渡效果</li></ul><p>接下来我们就借助<code>AnimatedBuilder</code>类来完成此分离。<code>AnimatedBuilder</code>是渲染树中的一个独立的类， 与<code>AnimatedWidget</code>类似，<code>AnimatedBuilder</code>自动监听来自Animation对象的通知，不需要手动调用<code>addListener()</code>。</p><p>我们根据下图的 widget 树来创建我们的代码：</p><p><img src="https://oss.filway.cn/filway-blog/AnimatedBuilder-WidgetTree.png" alt="AnimatedBuilder-WidgetTree"></p><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/animation.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">LogoApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// #docregion LogoWidget</span>\n<span class="token keyword">class</span> <span class="token class-name">LogoWidget</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Leave out the height and width so it fills the animating parent</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n        margin<span class="token punctuation">:</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>vertical<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token function">FlutterLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// #enddocregion LogoWidget</span>\n\n<span class="token comment">// #docregion GrowTransition</span>\n<span class="token keyword">class</span> <span class="token class-name">GrowTransition</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token function">GrowTransition</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>animation<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> Widget child<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">;</span>\n\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token function">AnimatedBuilder</span><span class="token punctuation">(</span>\n            animation<span class="token punctuation">:</span> animation<span class="token punctuation">,</span>\n            builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n                  height<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                  width<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> child<span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> child<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// #enddocregion GrowTransition</span>\n\n<span class="token keyword">class</span> <span class="token class-name">LogoApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  _LogoAppState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_LogoAppState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// #docregion print-state</span>\n<span class="token keyword">class</span> <span class="token class-name">_LogoAppState</span> <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token operator">&lt;</span>LogoApp<span class="token operator">&gt;</span> <span class="token keyword">with</span> SingleTickerProviderStateMixin <span class="token punctuation">{</span>\n  Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">;</span>\n  AnimationController controller<span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller <span class="token operator">=</span>\n        <span class="token function">AnimationController</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vsync<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    animation <span class="token operator">=</span> Tween<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    controller<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// #enddocregion print-state</span>\n\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">GrowTransition</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token function">LogoWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        animation<span class="token punctuation">:</span> animation<span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// #docregion print-state</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="如何使用hero动画？"><a class="header-anchor" href="#如何使用hero动画？" aria-hidden="true">#</a> 如何使用Hero动画？</h2><h3 id="什么是hero动画？"><a class="header-anchor" href="#什么是hero动画？" aria-hidden="true">#</a> 什么是Hero动画？</h3><p><img src="https://oss.filway.cn/filway-blog/Standard-Hero-Animation.gif" alt="zoom.gif"></p><p><img src="https://oss.filway.cn/filway-blog/Radial-Hero-Animation.gif" alt="zoom.gif"></p><p>在 Flutter中可以用 <code>Hero</code> widget创建这个动画。当 hero 通过动画从源页面飞到目标页面时，目标页面逐渐淡入视野。通常， <code>hero</code> 是用户界面的一小部分，如图片，它通常在两个页面都有。从用户的角度来看， <code>hero</code> 在页面之间“飞翔”。接下来我们一起来学习如何创建Hero动画：</p><h4 id="实现标准hero动画"><a class="header-anchor" href="#实现标准hero动画" aria-hidden="true">#</a> 实现标准hero动画</h4><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/scheduler.dart&#39;</span> <span class="token keyword">show</span> timeDilation<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PhotoHero</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token function">PhotoHero</span><span class="token punctuation">(</span><span class="token punctuation">{</span> Key key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>photo<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTap<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> String photo<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> VoidCallback onTap<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> double width<span class="token punctuation">;</span>\n\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">SizedBox</span><span class="token punctuation">(</span>\n      width<span class="token punctuation">:</span> width<span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Hero</span><span class="token punctuation">(</span>\n        tag<span class="token punctuation">:</span> photo<span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token function">Material</span><span class="token punctuation">(</span>\n          color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>transparent<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">InkWell</span><span class="token punctuation">(</span>\n            onTap<span class="token punctuation">:</span> onTap<span class="token punctuation">,</span>\n            child<span class="token punctuation">:</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>\n              photo<span class="token punctuation">,</span>\n              fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>contain<span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">HeroAnimation</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    timeDilation <span class="token operator">=</span> <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token comment">// 1.0 means normal animation speed.</span>\n\n    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n      appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;Basic Hero Animation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token function">PhotoHero</span><span class="token punctuation">(</span>\n          photo<span class="token punctuation">:</span> <span class="token string">&#39;https://raw.githubusercontent.com/flutter/website/master/examples/_animation/hero_animation/images/flippers-alpha.png&#39;</span><span class="token punctuation">,</span>\n          width<span class="token punctuation">:</span> <span class="token number">300.0</span><span class="token punctuation">,</span>\n          onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>MaterialPageRoute<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n                    appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n                      title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;Flippers Page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    body<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n                      <span class="token comment">// Set background to blue to emphasize that it&#39;s a new route.</span>\n                      color<span class="token punctuation">:</span> Colors<span class="token punctuation">.</span>lightBlueAccent<span class="token punctuation">,</span>\n                      padding<span class="token punctuation">:</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      alignment<span class="token punctuation">:</span> Alignment<span class="token punctuation">.</span>topLeft<span class="token punctuation">,</span>\n                      child<span class="token punctuation">:</span> <span class="token function">PhotoHero</span><span class="token punctuation">(</span>\n                        photo<span class="token punctuation">:</span> <span class="token string">&#39;https://raw.githubusercontent.com/flutter/website/master/examples/_animation/hero_animation/images/flippers-alpha.png&#39;</span><span class="token punctuation">,</span>\n                        width<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token punctuation">,</span>\n                        onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                          Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MaterialApp</span><span class="token punctuation">(</span>home<span class="token punctuation">:</span> <span class="token function">HeroAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="hero的函数原型"><a class="header-anchor" href="#hero的函数原型" aria-hidden="true">#</a> Hero的函数原型</h4><div class="language-dart"><pre><code> <span class="token keyword">const</span> <span class="token function">Hero</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    Key key<span class="token punctuation">,</span>\n    <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tag<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>createRectTween<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>flightShuttleBuilder<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>placeholderBuilder<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>transitionOnUserGestures <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token metadata symbol">@required</span> <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">assert</span><span class="token punctuation">(</span>tag <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token keyword">assert</span><span class="token punctuation">(</span>transitionOnUserGestures <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token keyword">assert</span><span class="token punctuation">(</span>child <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><ul><li>tag：[必须]用于关联两个Hero动画的标识；</li><li>createRectTween：[可选]定义目标Hero的边界，在从起始位置到目的位置的“飞行”过程中该如何变化；</li><li>child：[必须]定义动画所呈现的widget；</li></ul><h4 id="实现径向hero动画"><a class="header-anchor" href="#实现径向hero动画" aria-hidden="true">#</a> 实现径向hero动画</h4><div class="language-dart"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;dart:math&#39;</span> <span class="token operator">as</span> math<span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/scheduler.dart&#39;</span> <span class="token keyword">show</span> timeDilation<span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Photo</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token function">Photo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> Key key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>photo<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>color<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onTap <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> String photo<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> Color color<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> VoidCallback onTap<span class="token punctuation">;</span>\n\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Material</span><span class="token punctuation">(</span>\n      <span class="token comment">// Slightly opaque color appears where the image has transparency.</span>\n      color<span class="token punctuation">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>primaryColor<span class="token punctuation">.</span><span class="token function">withOpacity</span><span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">InkWell</span><span class="token punctuation">(</span>\n        onTap<span class="token punctuation">:</span> onTap<span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token function">LayoutBuilder</span><span class="token punctuation">(</span>\n          builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> BoxConstraints size<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> Image<span class="token punctuation">.</span><span class="token function">network</span><span class="token punctuation">(</span>\n              photo<span class="token punctuation">,</span>\n              fit<span class="token punctuation">:</span> BoxFit<span class="token punctuation">.</span>contain<span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RadialExpansion</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token function">RadialExpansion</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    Key key<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>maxRadius<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>child<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> clipRectSize <span class="token operator">=</span> <span class="token number">2.0</span> <span class="token operator">*</span> <span class="token punctuation">(</span>maxRadius <span class="token operator">/</span> math<span class="token punctuation">.</span>sqrt2<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> double maxRadius<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> clipRectSize<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> Widget child<span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">ClipOval</span><span class="token punctuation">(</span>\n      child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token function">SizedBox</span><span class="token punctuation">(</span>\n          width<span class="token punctuation">:</span> clipRectSize<span class="token punctuation">,</span>\n          height<span class="token punctuation">:</span> clipRectSize<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">ClipRect</span><span class="token punctuation">(</span>\n            child<span class="token punctuation">:</span> child<span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RadialExpansionDemo</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token keyword">const</span> double kMinRadius <span class="token operator">=</span> <span class="token number">32.0</span><span class="token punctuation">;</span>\n  <span class="token keyword">static</span> <span class="token keyword">const</span> double kMaxRadius <span class="token operator">=</span> <span class="token number">128.0</span><span class="token punctuation">;</span>\n  <span class="token keyword">static</span> <span class="token keyword">const</span> opacityCurve <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token function">Interval</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">,</span> curve<span class="token punctuation">:</span> Curves<span class="token punctuation">.</span>fastOutSlowIn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">static</span> RectTween <span class="token function">_createRectTween</span><span class="token punctuation">(</span>Rect begin<span class="token punctuation">,</span> Rect end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">MaterialRectCenterArcTween</span><span class="token punctuation">(</span>begin<span class="token punctuation">:</span> begin<span class="token punctuation">,</span> end<span class="token punctuation">:</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">static</span> Widget <span class="token function">_buildPage</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> String imageName<span class="token punctuation">,</span> String description<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n      color<span class="token punctuation">:</span> Theme<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>canvasColor<span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Center</span><span class="token punctuation">(</span>\n        child<span class="token punctuation">:</span> <span class="token function">Card</span><span class="token punctuation">(</span>\n          elevation<span class="token punctuation">:</span> <span class="token number">8.0</span><span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">Column</span><span class="token punctuation">(</span>\n            mainAxisSize<span class="token punctuation">:</span> MainAxisSize<span class="token punctuation">.</span>min<span class="token punctuation">,</span>\n            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token function">SizedBox</span><span class="token punctuation">(</span>\n                width<span class="token punctuation">:</span> kMaxRadius <span class="token operator">*</span> <span class="token number">2.0</span><span class="token punctuation">,</span>\n                height<span class="token punctuation">:</span> kMaxRadius <span class="token operator">*</span> <span class="token number">2.0</span><span class="token punctuation">,</span>\n                child<span class="token punctuation">:</span> <span class="token function">Hero</span><span class="token punctuation">(</span>\n                  createRectTween<span class="token punctuation">:</span> _createRectTween<span class="token punctuation">,</span>\n                  tag<span class="token punctuation">:</span> imageName<span class="token punctuation">,</span>\n                  child<span class="token punctuation">:</span> <span class="token function">RadialExpansion</span><span class="token punctuation">(</span>\n                    maxRadius<span class="token punctuation">:</span> kMaxRadius<span class="token punctuation">,</span>\n                    child<span class="token punctuation">:</span> <span class="token function">Photo</span><span class="token punctuation">(</span>\n                      photo<span class="token punctuation">:</span> imageName<span class="token punctuation">,</span>\n                      onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token function">Text</span><span class="token punctuation">(</span>\n                description<span class="token punctuation">,</span>\n                style<span class="token punctuation">:</span> <span class="token function">TextStyle</span><span class="token punctuation">(</span>fontWeight<span class="token punctuation">:</span> FontWeight<span class="token punctuation">.</span>bold<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                textScaleFactor<span class="token punctuation">:</span> <span class="token number">3.0</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token keyword">const</span> <span class="token function">SizedBox</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">16.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  Widget <span class="token function">_buildHero</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> String imageName<span class="token punctuation">,</span> String description<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n      width<span class="token punctuation">:</span> kMinRadius <span class="token operator">*</span> <span class="token number">2.0</span><span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> kMinRadius <span class="token operator">*</span> <span class="token number">2.0</span><span class="token punctuation">,</span>\n      child<span class="token punctuation">:</span> <span class="token function">Hero</span><span class="token punctuation">(</span>\n        createRectTween<span class="token punctuation">:</span> _createRectTween<span class="token punctuation">,</span>\n        tag<span class="token punctuation">:</span> imageName<span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token function">RadialExpansion</span><span class="token punctuation">(</span>\n          maxRadius<span class="token punctuation">:</span> kMaxRadius<span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token function">Photo</span><span class="token punctuation">(</span>\n            photo<span class="token punctuation">:</span> imageName<span class="token punctuation">,</span>\n            onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              Navigator<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                PageRouteBuilder<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                  pageBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> animation<span class="token punctuation">,</span> Animation<span class="token operator">&lt;</span>double<span class="token operator">&gt;</span> secondaryAnimation<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token function">AnimatedBuilder</span><span class="token punctuation">(</span>\n                        animation<span class="token punctuation">:</span> animation<span class="token punctuation">,</span>\n                        builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>BuildContext context<span class="token punctuation">,</span> Widget child<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                          <span class="token keyword">return</span> <span class="token function">Opacity</span><span class="token punctuation">(</span>\n                            opacity<span class="token punctuation">:</span> opacityCurve<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>animation<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                            child<span class="token punctuation">:</span> <span class="token function">_buildPage</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> imageName<span class="token punctuation">,</span> description<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token punctuation">}</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  Widget <span class="token function">build</span><span class="token punctuation">(</span>BuildContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    timeDilation <span class="token operator">=</span> <span class="token number">5.0</span><span class="token punctuation">;</span> <span class="token comment">// 1.0 is normal animation speed.</span>\n\n    <span class="token keyword">return</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>\n      appBar<span class="token punctuation">:</span> <span class="token function">AppBar</span><span class="token punctuation">(</span>\n        title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string">&#39;Radial Transition Demo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      body<span class="token punctuation">:</span> <span class="token function">Container</span><span class="token punctuation">(</span>\n        padding<span class="token punctuation">:</span> <span class="token keyword">const</span> EdgeInsets<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">32.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        alignment<span class="token punctuation">:</span> FractionalOffset<span class="token punctuation">.</span>bottomLeft<span class="token punctuation">,</span>\n        child<span class="token punctuation">:</span> <span class="token function">Row</span><span class="token punctuation">(</span>\n          mainAxisAlignment<span class="token punctuation">:</span> MainAxisAlignment<span class="token punctuation">.</span>spaceBetween<span class="token punctuation">,</span>\n          children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token function">_buildHero</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;https://raw.githubusercontent.com/flutter/website/master/examples/_animation/radial_hero_animation/images/chair-alpha.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chair&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">_buildHero</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;https://raw.githubusercontent.com/flutter/website/master/examples/_animation/radial_hero_animation/images/binoculars-alpha.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Binoculars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token function">_buildHero</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;https://raw.githubusercontent.com/flutter/website/master/examples/_animation/radial_hero_animation/images/beachball-alpha.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beach ball&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token function">MaterialApp</span><span class="token punctuation">(</span>home<span class="token punctuation">:</span> <span class="token function">RadialExpansionDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',73);p.render=function(s,t,p,e,c,u){return a(),n("div",null,[o])};export default p;export{t as __pageData};
