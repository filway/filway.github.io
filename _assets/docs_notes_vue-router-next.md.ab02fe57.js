import{g as e,f as r,G as t}from"./common-bec3f312.js";const u='{"title":"vue-router-next源码解析","frontmatter":{"date":"2021-10-10","title":"vue-router-next源码解析","tags":["源码解析","vue-router"],"describe":"vue-router-next源码解析"},"headers":[{"level":2,"title":"vue-router 常见问题","slug":"vue-router-常见问题"},{"level":2,"title":"vue-router 路由模式","slug":"vue-router-路由模式"},{"level":2,"title":"vue-router 源码执行流程分析","slug":"vue-router-源码执行流程分析"},{"level":3,"title":"vue-router 初始化流程","slug":"vue-router-初始化流程"}],"relativePath":"docs/notes/vue-router-next.md","lastUpdated":1660147426760.5005}';var o={};const a=t('<h1 id="vue-router-next-源码解析"><a class="header-anchor" href="#vue-router-next-源码解析" aria-hidden="true">#</a> vue-router-next 源码解析</h1><p>源码仓库：<a href="https://github.com/vuejs/vue-router-next" target="_blank" rel="noopener noreferrer">https://github.com/vuejs/vue-router-next</a></p><h2 id="vue-router-常见问题"><a class="header-anchor" href="#vue-router-常见问题" aria-hidden="true">#</a> vue-router 常见问题</h2><ul><li>history 和 hash 模式的区别是什么？（涉及 vue-router 路由模式和前端发布原理）</li><li>Vue dev 模式下为什么不需要配置 history fallback？（涉及 webpack-dev-server 配置）</li><li>我们并没有定义 router-link 和 router-view，为什么代码里能直接使用？（涉及 vue-router 初始化流程和 Vue 插件）</li><li>浏览器中如何实现URL变化但页面不刷新？（涉及 vue-router history 模式核心实现原理）</li><li>vue-router 如何实现路由匹配？（涉及 vue-router Matcher 实现原理）</li><li>router-view 如何实现组件动态渲染？（涉及 Vue 动态组件）</li></ul><h2 id="vue-router-路由模式"><a class="header-anchor" href="#vue-router-路由模式" aria-hidden="true">#</a> vue-router 路由模式</h2><p><a href="https://next.router.vuejs.org/zh/guide/essentials/history-mode.html" target="_blank" rel="noopener noreferrer">官网地址</a></p><p>hash和history模式，区别：</p><ul><li>语法结构不同</li><li>部署方式不同</li><li>SEO</li></ul><h2 id="vue-router-源码执行流程分析"><a class="header-anchor" href="#vue-router-源码执行流程分析" aria-hidden="true">#</a> vue-router 源码执行流程分析</h2><h3 id="vue-router-初始化流程"><a class="header-anchor" href="#vue-router-初始化流程" aria-hidden="true">#</a> vue-router 初始化流程</h3>',10);o.render=function(t,u,o,l,i,h){return r(),e("div",null,[a])};export default o;export{u as __pageData};
