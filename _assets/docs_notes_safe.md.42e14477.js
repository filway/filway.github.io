import{g as e,f as l,G as r}from"./common-bec3f312.js";const t='{"title":"安全预防","frontmatter":{"date":"2021-10-10","title":"安全预防","tags":["Web攻击","CSRF"],"describe":"安全预防"},"headers":[{"level":2,"title":"SQL 注入","slug":"sql-注入"},{"level":2,"title":"XSS攻击 (前端来做)","slug":"xss攻击-前端来做"},{"level":2,"title":"CSRF跨站请求伪造","slug":"csrf跨站请求伪造"},{"level":2,"title":"附：优化请求","slug":"附：优化请求"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"docs/notes/safe.md","lastUpdated":1660147426760.5005}';var a={};const s=r('<h1 id="安全预防"><a class="header-anchor" href="#安全预防" aria-hidden="true">#</a> 安全预防</h1><p>常见的Web攻击</p><ul><li>SQL注入</li><li>XSS</li><li>CSRF</li><li>网络攻击</li></ul><h2 id="sql-注入"><a class="header-anchor" href="#sql-注入" aria-hidden="true">#</a> SQL 注入</h2><p>使用sequelize可以防止，不用刻意去解决。 PS: 只要不裸写sql语句，常见的数据库工具，都可以解决sql注入的问题</p><h2 id="xss攻击-前端来做"><a class="header-anchor" href="#xss攻击-前端来做" aria-hidden="true">#</a> XSS攻击 (前端来做)</h2><p>通过vue和React可以防止。H5也可以通过vue ssr防止。</p><ul><li>vue中要输出原生html需要用 v-html</li><li>React中要使用 dangerouslySetInnerHTML</li></ul><p>如果想要单独处理，可使用 <a href="https://github.com/component/escape-html" target="_blank" rel="noopener noreferrer">https://github.com/component/escape-html</a> 或者xss <br> 前两天我就发现 <a href="http://segmentfault.com" target="_blank" rel="noopener noreferrer">segmentfault.com</a> 暴露了一个类似的bug。</p><h2 id="csrf跨站请求伪造"><a class="header-anchor" href="#csrf跨站请求伪造" aria-hidden="true">#</a> CSRF跨站请求伪造</h2><p>现有的逻辑，可以很好的预防CSRF攻击</p><ul><li>提交数据都使用post请求</li><li>jwt有token检查</li></ul><p>如果想要做单独处理，可参考 <a href="https://github.com/expressjs.csurf" target="_blank" rel="noopener noreferrer">https://github.com/expressjs.csurf</a></p><h2 id="附：优化请求"><a class="header-anchor" href="#附：优化请求" aria-hidden="true">#</a> 附：优化请求</h2><p>使用 helemt 优化请求头</p><p>网络安全问题，你可以通过代码来处理，但http等协议标准，以及浏览器，他们也在大力合作来推动网络安全，制定一些规范。<br> 这些安全相关的细节，跟我们日常开发的业务相关性不大，我们也没必要去关注这些细节。但你要知道如何去使用它。</p><p>参考 <a href="https://www.baidu.com" target="_blank" rel="noopener noreferrer">附-http请求头</a></p><h2 id="总结"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>SQL注入</li><li>XSS攻击</li><li>CSRF 跨站请求伪造</li><li>helmet 优化请求头</li></ul>',19);a.render=function(r,t,a,h,i,n){return l(),e("div",null,[s])};export default a;export{t as __pageData};
