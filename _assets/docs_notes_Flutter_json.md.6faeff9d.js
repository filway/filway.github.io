import{g as n,f as a,G as s}from"./common-bec3f312.js";const t='{"title":"JSON解析与复杂模型转换实用技巧","frontmatter":{"date":"2022-04-13","title":"JSON解析与复杂模型转换实用技巧","tags":["Flutter"],"describe":null},"headers":[{"level":2,"title":"JSON解析与复杂模型转换实用技巧","slug":"json解析与复杂模型转换实用技巧"},{"level":2,"title":"我该用什么JSON序列化方式？","slug":"我该用什么json序列化方式？"},{"level":2,"title":"如何反序列化？","slug":"如何反序列化？"},{"level":2,"title":"复杂JSON解析？","slug":"复杂json解析？"},{"level":3,"title":"如何解析对象中的数组？","slug":"如何解析对象中的数组？"},{"level":2,"title":"提升效率：在线转换JSON TO Dart？","slug":"提升效率：在线转换json-to-dart？"}],"relativePath":"docs/notes/Flutter/json.md","lastUpdated":1660147426756.5005}';var p={};const o=s('<h2 id="json解析与复杂模型转换实用技巧"><a class="header-anchor" href="#json解析与复杂模型转换实用技巧" aria-hidden="true">#</a> JSON解析与复杂模型转换实用技巧</h2><ul><li>应该是有那种JSON序列化方式？</li><li>如何序列化？</li><li>复杂JSON解析？</li><li>提升效率：在线转换JSON TO Dart？</li></ul><p>JSON是一种轻量级的数据交换语言，在网络编程中大量的用到了JSON来作为传输数据的格式，那么在Flutter中是如何处理JSON数据，以及JSON数据处理有那些实用技巧呢？</p><h2 id="我该用什么json序列化方式？"><a class="header-anchor" href="#我该用什么json序列化方式？" aria-hidden="true">#</a> 我该用什么JSON序列化方式？</h2><ul><li>小型项目：手动序列化；</li><li>大型项目：借助插件生成<a href="https://pub.dartlang.org/packages/json_serializable" target="_blank" rel="noopener noreferrer">json_serializable</a>和<a href="https://pub.dartlang.org/packages/built_value" target="_blank" rel="noopener noreferrer">built_value</a>；</li></ul><blockquote><p>其实大型项目使用手动+借助下面提到的<a href="http://www.devio.org/io/tools/json-to-dart/" target="_blank" rel="noopener noreferrer">在线转换</a>的方式更加灵活高效；</p></blockquote><h2 id="如何反序列化？"><a class="header-anchor" href="#如何反序列化？" aria-hidden="true">#</a> 如何反序列化？</h2><div class="language-dart"><pre><code>String jsonStr <span class="token operator">=</span> <span class="token string">&#39;{ &quot;icon&quot;: &quot;http://www.devio.org/io/flutter_app/img/ln_food.png&quot;, &quot;title&quot;: &quot;美食林&quot;, &quot;url&quot;: &quot;https://m.ctrip.com/webapp/you/foods/address.html?new=1&amp;ishideheader=true&quot;, &quot;statusBarColor&quot;: &quot;19A0F0&quot;, &quot;hideAppBar&quot;: true }&#39;</span><span class="token punctuation">;</span>\nMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">&gt;</span> map <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;icon： ${map[&#39;</span>icon<span class="token string">&#39;]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;title：${map[&#39;</span>title<span class="token string">&#39;]}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>通过上述方式可以将json字符串转换成Map，但Map中存放那些字段在使用的时候很不方便，如果将<code>Map&lt;String, dynamic&gt;</code>转成Model呢？</p><div class="language-dart"><pre><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\nCommonModel model <span class="token operator">=</span> CommonModel<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;icon： ${model.icon}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;title：${model.title}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token keyword">class</span> <span class="token class-name">CommonModel</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> String icon<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> String title<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> String url<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> String statusBarColor<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> bool hideAppBar<span class="token punctuation">;</span>\n\n  <span class="token function">CommonModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>icon<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>statusBarColor<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hideAppBar<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">factory</span> CommonModel<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">&gt;</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">CommonModel</span><span class="token punctuation">(</span>\n      icon<span class="token punctuation">:</span> json<span class="token punctuation">[</span><span class="token string">&#39;icon&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      title<span class="token punctuation">:</span> json<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      url<span class="token punctuation">:</span> json<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      statusBarColor<span class="token punctuation">:</span> json<span class="token punctuation">[</span><span class="token string">&#39;statusBarColor&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      hideAppBar<span class="token punctuation">:</span> json<span class="token punctuation">[</span><span class="token string">&#39;hideAppBar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>这样一来我们就可以很明确的指导model中有那些字段。</p></blockquote><h2 id="复杂json解析？"><a class="header-anchor" href="#复杂json解析？" aria-hidden="true">#</a> 复杂JSON解析？</h2><h3 id="如何解析对象中的数组？"><a class="header-anchor" href="#如何解析对象中的数组？" aria-hidden="true">#</a> 如何解析对象中的数组？</h3><div class="language-"><pre><code>{\n  &quot;url&quot;: &quot;xxx&quot;,\n  &quot;tabs&quot;: [\n    {\n      &quot;labelName&quot;: &quot;推荐&quot;,\n      &quot;groupChannelCode&quot;: &quot;tourphoto_global1&quot;\n    },\n    {\n      &quot;labelName&quot;: &quot;拍照技巧&quot;,\n      &quot;groupChannelCode&quot;: &quot;tab-photo&quot;\n    }\n  ]\n}\n</code></pre></div><p>解析：</p><div class="language-dart"><pre><code><span class="token keyword">class</span> <span class="token class-name">TravelTabModel</span> <span class="token punctuation">{</span>\n  String url<span class="token punctuation">;</span>\n  List<span class="token operator">&lt;</span>TravelTab<span class="token operator">&gt;</span> tabs<span class="token punctuation">;</span>\n\n  <span class="token function">TravelTabModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tabs<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  TravelTabModel<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">&gt;</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t url <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">(</span>json<span class="token punctuation">[</span><span class="token string">&#39;tabs&#39;</span><span class="token punctuation">]</span> <span class="token operator">as</span> List<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> TravelTab<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">TravelTab</span> <span class="token punctuation">{</span>\n  String labelName<span class="token punctuation">;</span>\n  String groupChannelCode<span class="token punctuation">;</span>\n\n  <span class="token function">TravelTab</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>labelName<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>groupChannelCode<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  TravelTab<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">&gt;</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    labelName <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&#39;labelName&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    groupChannelCode <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&#39;groupChannelCode&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>如果要加些异常处理：</p></blockquote><div class="language-dart"><pre><code>TravelTabModel<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token operator">&gt;</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    url <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>json<span class="token punctuation">[</span><span class="token string">&#39;tabs&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      tabs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">List</span><span class="token operator">&lt;</span>TravelTab<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      json<span class="token punctuation">[</span><span class="token string">&#39;tabs&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        tabs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TravelTab<span class="token punctuation">.</span>fromJson</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre></div><blockquote><p>改成final：</p></blockquote><div class="language-"><pre><code>class TravelTabModel {\n  final String url;\n  final List&lt;TravelTab&gt; tabs;\n\n  TravelTabModel({this.url, this.tabs});\n\n  factory TravelTabModel.fromJson(Map&lt;String, dynamic&gt; json) {\n    Stringc url = json[&#39;url&#39;];\n    List&lt;TravelTab&gt; tabs =\n        (json[&#39;tabs&#39;] as List).map((i) =&gt; TravelTab.fromJson(i)).toList();\n    return TravelTabModel(url: url, tabs: tabs);\n  }\n}\n</code></pre></div><h2 id="提升效率：在线转换json-to-dart？"><a class="header-anchor" href="#提升效率：在线转换json-to-dart？" aria-hidden="true">#</a> 提升效率：在线转换JSON TO Dart？</h2><ul><li><a href="http://www.devio.org/io/flutter_app/json/home_page.json" target="_blank" rel="noopener noreferrer">home_page.json</a></li><li><a href="http://www.devio.org/io/tools/json-to-dart/" target="_blank" rel="noopener noreferrer"><code>json_to_dart</code></a></li><li><a href="http://json2dart.com/" target="_blank" rel="noopener noreferrer">json2dart</a></li></ul>',22);p.render=function(s,t,p,e,c,l){return a(),n("div",null,[o])};export default p;export{t as __pageData};
